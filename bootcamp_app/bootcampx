\l
\du
\q
\d
\h
\?
\q
CREATE DATABASE test_db;
\c test_db;
CREATE TABLE famous_people (
id SERIAL PRIMARY KEY,
first_name VARCHAR(50),
last_name VARCHAR(50),
birthdate DATE
);
INSERT INTO famous_people (first_name, last_name, birthdate)
VALUES ('Abraham', 'Lincoln', '1809-02-12');
INSERT INTO famous_people (first_name, last_name, birthdate)
VALUES ('Mahatma', 'Gandhi', '1869-10-02');
INSERT INTO famous_people (first_name, last_name, birthdate)
VALUES ('Paul', 'Rudd', '1969-04-06');
INSERT INTO famous_people (first_name, last_name, birthdate)
VALUES ('Paul', 'Giamatti', '1967-06-06');
SELECT * FROM famous_people;
SELECT * FROM famous_people WHERE birthdate>=1920-01-01;
SELECT * FROM famous_people WHERE birthdate>='1920-01-01';
SELECT * FROM famous_people WHERE birthdate < '1920-01-01';
SELECT * FROM famous_people WHERE first_name = 'PAUL';
SELECT * FROM famous_people WHERE first_name = 'Paul';
SELECT COUNT(*) FROM famous_people;
\q
CREATE DATABASE bootcampx;
\c bootcampx;
\i migrations/students_cohorts.sql
\dt
\i seeds/cohorts.sql
\i seeds/students.sql
SELECT count(*) FROM students;
\i 0_selects/1_students_without_github.sql
\i 1_queries/1_students_in_cohort.sql
\i 0_selects/1_students_without_github.sql
\i 1_queries/1_students_in_cohort.sql
\i 1_queries/1_students_in_cohort.sql
\i 1_queries\2_total_students_in_cohorts.sql
\i 1_queries/2_total_students_in_cohorts.sql
\i 1_queries/2_total_students_in_cohorts.sql
\i 1_queries/2_total_students_in_cohorts.sql
\i 1_queries/3_contact_details.sql
\i 1_queries/4_non_gmail_students.sql
\i 1_queries/4_non_gmail_students.sql
\i 1_queries/5_currently_enrolled_students.sql
\i 1_queries/6_github_activity.sql
\i 1_queries/6_github_activity.sql
\i 1_queries/6_github_activity.sql
\i migrations/assignments_submissions.sql
\dt
wget http://bit.ly/2N1uWQy -O seeds/assignments_seeds.sql
\i seeds/assignments_seeds.sql
\i seeds/assignment_submissions_seeds.sql
SELECT count(*) FROM assignment_submissions;.
SELECT count(*) FROM assignment_submissions;
SELECT count(*) FROM assignment_submissions;.
\dt
/dt
/db
\db
help
SELECT students.name as student_name, email, cohorts.name as cohort_name
FROM students JOIN cohorts ON cohorts.id = cohort_id;
SELECT students.name as student_name, email, cohorts.name as cohort_name
FROM students JOIN cohorts ON cohorts.id = cohort_id;
SELECT students.name as student_name, email, cohorts.name as cohort_name
FROM students JOIN cohorts ON cohorts.id = cohort_id;
\c bootcampX
\c BootcampX
\c BootCampX
\c bootcampx
\dt
SELECT students.name as student_name, email, cohorts.name as cohort_name
FROM students JOIN cohorts ON cohorts.id = cohort_id;
SELECT students.name as student_name, email, cohorts.name as cohort_name
FROM students INNER JOIN cohorts ON cohorts.id = cohort_id;
SELECT students.name as student_name, email, cohorts.name as cohort_name
FROM students OUTER JOIN cohorts ON cohorts.id = cohort_id;
SELECT students.name as student_name, email, cohorts.name as cohort_name
FROM students LEFT OUTER JOIN cohorts ON cohorts.id = cohort_id;
SELECT students.name as student_name, email, cohorts.name as cohort_name
FROM students RIGHT OUTER JOIN cohorts ON cohorts.id = cohort_id;
SELECT students.name as student_name, email, cohorts.name as cohort_name
FROM students FULL OUTER JOIN cohorts ON cohorts.id = cohort_id;
\i 2_queries_join/1_students_total_assignment_duration.sql
\i 2_queries_joins/1_students_total_assignment_duration.sql
\i 2_queries_joins/1_students_total_assignment_duration.sql
\i 2_queries_joins/1_students_total_assignment_duration.sql
\i 2_queries_joins/1_students_total_assignment_duration.sql
\i 2_queries_joins/1_students_total_assignment_duration.sql
\i 2_queries_joins/1_students_total_assignment_duration.sql
\i 2_queries_joins/1_students_total_assignment_duration.sql
\i 2_queries_joins/2_cohorts_total_assignment_duration.sql
\i 2_queries_joins/2_cohorts_total_assignment_duration.sql
SELECT students.name as student, count(assignment_submissions.*) as total_submissions
FROM assignment_submissions
JOIN students ON students.id = student_id
GROUP BY students.name;
\i 3_queries_group-by/1_assignments_per_day.sql
\i 3_queries_group-by/2_busy_days.sql
\i 3_queries_group-by/2_busy_days.sql
\i 3_queries_group-by/3_large_cohorts.sql
\i 3_queries_group-by/3_large_cohorts.sql
\i 3_queries_group-by/3_large_cohorts.sql
\i 3_queries_group-by/3_large_cohorts.sql
\i 3_queries_group-by/3_large_cohorts.sql
\i 3_queries_group-by/3_large_cohorts.sql
\i 3_queries_group-by/3_large_cohorts.sql
\i 3_queries_group-by/3_large_cohorts.sql
\i 3_queries_group-by/4_total_assignment_submissions.sql
\i 3_queries_group-by/4_total_assignment_submissions.sql
\i 3_queries_group-by/5_average_completion_time.sql
\i 3_queries_group-by/5_average_completion_time.sql
\i 3_queries_group-by/5_average_completion_time.sql
\i 3_queries_group-by/6_low_average_completion_time.sql
\i 3_queries_group-by/6_low_average_completion_time.sql
\i 3_queries_group-by/6_low_average_completion_time.sql
\i migrations/teachers_assistance_requests.sql
\dt
\i seeds/teachers_seeds.sql
\i seeds/assistance_requests_seeds.sql
SELECT count(*) FROM teachers;
SELECT count(*) FROM assistance_requests;
\i 4_queries/1_total_teacher_assistance_requests.sql
\i 4_queries/1_total_teacher_assistance_requests.sql
\i 4_queries/1_total_teacher_assistance_requests.sql
\i 4_queries/2_total_student_assistance_requests.sql
\i 4_queries/2_total_student_assistance_requests.sql
\i 4_queries/3_assistance_requests_data.sql
\i 4_queries/3_assistance_requests_data.sql
\i 4_queries/4_average_assistance_time.sql
\i 4_queries/4_average_assistance_time.sql
\i 4_queries/5_average_cohort_assistance_time.sql
\i 4_queries/5_average_cohort_assistance_time.sql
\i 4_queries/5_average_cohort_assistance_time.sql
\i 4_queries/6_cohort_with_longest_assistances.sql
\i 4_queries/6_cohort_with_longest_assistances.sql
\i 4_queries/6_cohort_with_longest_assistances.sql
\i 4_queries/6_cohort_with_longest_assistances.sql
\i 4_queries/6_cohort_with_longest_assistances.sql
\i 4_queries/6_cohort_with_longest_assistances.sql
\i 4_queries/7_average_assistance_request_wait_time.sql
\i 4_queries/7_average_assistance_request_wait_time.sql
\i 4_queries/8_total_cohort_assistance_duration.sql
\i 4_queries/8_total_cohort_assistance_duration.sql
\i 4_queries/9_cohort_average_assistance_duration.sql
\i 4_queries/9_cohort_average_assistance_duration.sql
\i 4_queries/9_cohort_average_assistance_duration.sql
\i 4_queries/9_cohort_average_assistance_duration.sql
\i 4_queries/10_most_confusing_assignments.sql
\i 4_queries/10_most_confusing_assignments.sql
\i 4_queries/10_most_confusing_assignments.sql
\i 4_queries/11_total_assignments_and_duration.sql
\i 4_q.sql
\i 4_queries/12_name_of_teachers_that_assisted.sql
\i 4_queries/12_name_of_teachers_that_assisted.sql
\i 4_queries/12_name_of_teachers_that_assisted.sql
\i 4_queries/12_name_of_teachers_that_assisted.sql
\i 4_queries/12_name_of_teachers_that_assisted.sql
\i 4_queries/12_name_of_teachers_that_assisted.sql
\i 4_queries/12_name_of_teachers_that_assisted.sql
\i 4_queries/12_name_of_teachers_that_assisted.sql
\i 4_queries/12_name_of_teachers_that_assisted.sql
\i 4_queries/12_name_of_teachers_that_assisted.sql
\i 4_queries/12_name_of_teachers_that_assisted.sql
\i 4_queries/12_name_of_teachers_that_assisted.sql
\i 4_queries/13_name_of_teachers_and_number_of)assistances.sql
\i 4_queries/13_name_of_teachers_and_number_of_assistances.sql
\i 4_queries/13_name_of_teachers_and_number_of_assistances.sql
\i 4_queries/13_name_of_teachers_and_number_of_assistances.sql
\i 4_queries/13_name_of_teachers_and_number_of_assistances.sql
\i 4_queries/13_name_of_teachers_and_number_of_assistances.sql
\i 4_queries/13_name_of_teachers_and_number_of_assistances.sql
\i 4_queries/13_name_of_teachers_and_number_of_assistances.sql
\i 4_queries/13_name_of_teachers_and_number_of_assistances.sql
\i 4_queries/13_name_of_teachers_and_number_of_assistances.sql
\i 4_queries/13_name_of_teachers_and_number_of_assistances.sql
\i 4_queries/13_name_of_teachers_and_number_of_assistances.sql
CREATE DATABASE test_db
\c test_db
CREATE TABLE users (
  id INTEGER PRIMARY KEY
);
CREATE TABLE users (
  id INTEGER PRIMARY KEY
);
CREATE TABLE users (
  id INTEGER PRIMARY KEY,
  name VARCHAR(255),
  birth_year SMALLINT,
  member_since TIMESTAMP
);
ALTER TABLE users ADD COLUMN name VARCHAR(255), ADD COLUMN  birth_year SMALLINT, ADD COLUMN  member_since TIMESTAMP;
\d users
DROP TABLE IF EXISTS users CASCASDE;
DROP TABLE IF EXISTS users CASCADE;
\d users
CREATE TABLE users (
  id INTEGER PRIMARY KEY,
  name VARCHAR(255),
  birth_year SMALLINT,
  member_since TIMESTAMP
);
\d users
INSERT INTO users (id, birth_year)
VALUES (1, 2019);
SELECT * FROM users;
DROP TABLE IF EXISTS users CASCADE;
CREATE TABLE users (
  id INTEGER PRIMARY KEY NOT NULL,
  name VARCHAR(255) NOT NULL,
  birth_year SMALLINT NOT NULL,
  member_since TIMESTAMP NOT NULL
);
\d users
INSERT INTO users (id, birth_year)
VALUES (1, 2019);
INSERT INTO users (id, name, birth_year, member_since)
VALUES (1, 'Susan Hudson', 2000, Now());
SELECT * FROM users;
ALTER TABLE users 
ALTER COLUMN member_since 
SET DEFAULT Now();
\d users
INSERT INTO users (id, name, birth_year)
VALUES (2, 'Malloy Jenkins', 1000);
SELECT * FROM users;
DROP TABLE IF EXISTS users CASCADE;
CREATE TABLE users (
  id SERIAL PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  birth_year SMALLINT NOT NULL,
  member_since TIMESTAMP NOT NULL DEFAULT Now()
);
\d users
INSERT INTO users (name, birth_year)
VALUES ('Susan Hudson', 2000),
('Malloy Jenkins', 1000);
SELECT * FROM users;
CREATE TABLE pets (
  id SERIAL PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  owner_id INTEGER NOT NULL REFERENCES users(id)
);
INSERT INTO pets (name, owner_id)
VALUES ('mittens', 1);
INSERT INTO pets (name, owner_id)
VALUES ('fluffy', 99);
DELETE FROM users WHERE id = 1;
DROP TABLE IF EXISTS pets;
CREATE TABLE pets (
  id SERIAL PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  owner_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE
);
psql test_db
SELECT * FROM users;

SELECT * FROM users;
SELECT * FROM pets;
\d pets;
INSERT INTO pets (name, owner_id)
VALUES ('mittens', 1);
INSERT INTO pets (name, owner_id)
VALUES ('fluffy', 2);
SELECT * FROM pets;
UPDATE pets
SET owner_id = 2 WHERE id = 1;
UPDATE pets SET owner_id = 1 WHERE id = 2;
SELECT * FROM pets;
\q
CREATE DATABASE lightbnb
\c lightbnb
CREATE DATABASE lightbnb;
CREATE DATABASE lightbnb;
\c lightbnb
\i migrations/01_schema.sql
\i migrations/01_schema.sql
\i migrations/01_schema.sql
\i migrations/01_schema.sql
\i migrations/01_schema.sql
\i migrations/01_schema.sql
\i migrations/01_schema.sql
\i migrations/01_schema.sql
\dt
\i migrations/01_schema.sql
\dt
\i seeds/01_seeds.sql
\i seeds/01_seeds.sql
SELECT * FROM users;
SELECT * FROM properties;
SELECT * FROM reservations;
SELECT * FROM property_reviews;
\i migrations/01_schema.sql
SELECT * FROM property_reviews;
SELECT * FROM reservations;
SELECT * FROM properties;
SELECT * FROM users;
\i seeds/02_seeds.sql
SELECT count(*) FROM users;
SELECT count(*) FROM properties;
SELECT count(*) FROM reservations;
SELECT count(*) FROM property_reviews;
\i 1_queries/user_login.sql
\i 1_queries/user_login.sql
\i 1_queries/average_lenght_of_reservation.sql
\i 1_queries/average_lenght_of_reservation.sql
\i 1_queries/3_property_listings_by_city.sql
\i 1_queries/3_property_listings_by_city.sql
\i 1_queries/3_property_listings_by_city.sql
\i 1_queries/3_property_listings_by_city.sql
\i 1_queries/3_property_listings_by_city.sql
\i 1_queries/3_property_listings_by_city.sql
\i 1_queries/3_property_listings_by_city.sql
SELECT avg(rating) FROM property_reviews WHERE property_id = 224;
SELECT city FROM properties WHERE id = 224;
\i 1_queries/3_property_listings_by_city.sql
\i 1_queries/3_property_listings_by_city.sql
\i 1_queries/4_most_visited_cities.sql
\i 1_queries/4_most_visited_cities.sql
\i 1_queries/5_all_my_reservations.sql
\i 1_queries/5_all_my_reservations.sql
\i 1_queries/5_all_my_reservations.sql
SELECT name, email
FROM students
WHERE id = 1;
\dt
\c bootcampX
\c bootcampx
\dt
SELECT name, email
FROM students
WHERE id = 1;
\q
SELECT name, email
FROM students
WHERE id = 1;
\s bootcampx
